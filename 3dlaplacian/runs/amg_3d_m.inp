%%%%%%%%%%%  General  arguments % Lines starting with % are ignored.
CSR                         ! Storage format CSR COO JAD
0160                        ! IDIM; domain size. Linear system size is IDIM**3
CONST                       ! PDECOEFF: CONST, EXP, BOX, GAUSS Coefficients of the PDE
CG                          ! Iterative method: BiCGSTAB BiCGSTABL BiCG CG CGS FCG GCR RGMRES
2                           ! ISTOPC
00500                       ! ITMAX
1                           ! ITRACE
30                          ! IRST (restart for RGMRES and BiCGSTABL)
1.d-6                       ! EPS
%%%%%%%%%%%   %%%%%%%%%%%%%%%%
ML                        ! Preconditioner type: NONE JACOBI GS FBGS BJAC AS ML POLY
%%%%%%%%%%%  Multilevel parameters %%%%%%%%%%%%%%%%
VCYCLE                      ! Type of multilevel CYCLE: VCYCLE WCYCLE KCYCLE MULT ADD
1                           ! Number of outer sweeps for ML
-3                          ! Max Number of levels in a multilevel preconditioner; if <0, lib default
-3                          ! Target coarse matrix size per process; if <0, lib default
DIST                        ! Coarsest-level matrix distribution: DIST  REPL
SMOOTHED                    ! Type of aggregation: SMOOTHED UNSMOOTHED
COUPLED                     ! Parallel aggregation: DEC, SYMDEC, COUPLED
MATCHBOXP                   ! aggregation measure SOC1, MATCHBOXP
8                           ! Requested size of the aggregates for MATCHBOXP
NATURAL                     ! Ordering of aggregation NATURAL DEGREE
-1.5                        ! Coarsening ratio, if < 0 use library default
FILTER                      ! Filtering of matrix:  FILTER NOFILTER
-0.0100d0                    ! Smoothed aggregation threshold, ignored if < 0
-2                           ! Number of thresholds in vector, next line ignored if <= 0
0.05 0.025                  ! Thresholds
%%%%%%%%%%%  Next preconditioner name and smoothers  %%%%%%%%%%%%%%%%
ML-VBM-VCYCLE-FBGS-D-BJAC       ! Longer descriptive name for preconditioner (up to 20 chars)
%%%%%%%%%%%  First smoother (for all levels but coarsest) %%%%%%%%%%%%%%%%
FBGS                        ! Smoother type JACOBI FBGS GS BWGS BJAC AS POLY  r 1-level, repeats previous.
6                           ! Number of sweeps for smoother
1                           ! degree for polynomial smoother
POLY_NEW                    ! Polynomial variant
%  Fields to be added for POLY
%    POLY_RHO_ESTIMATE             Currently only POLY_RHO_EST_POWER
POLY_RHO_EST_POWER
%    POLY_RHO_ESTIMATE_ITERATIONS  default = 20
%    POLY_RHO_BA                   set to value
1.0
%
0                           ! Number of overlap layers for AS preconditioner
HALO                        ! AS restriction operator: NONE HALO
NONE                        ! AS prolongation operator: NONE SUM AVG
L1-JACOBI                     ! Subdomain solver for BJAC/AS: JACOBI GS BGS ILU ILUT MILU MUMPS SLU UMF
1                           ! Inner solver sweeps (GS and JACOBI)
LLK                         ! AINV variant
0                           ! Fill level P for ILU(P) and ILU(T,P)
1                           ! Inverse Fill level P for INVK
1.d-4                       ! Threshold T for ILU(T,P)
%%%%%%%%%%%  Second smoother, always ignored for non-ML  %%%%%%%%%%%%%%%%
NONE                        ! Second (post) smoother, ignored if NONE
6                           ! Number of sweeps for (post) smoother
1                           ! degree for polynomial smoother
POLY_LOTTES_BETA                 ! Polynomial variant
POLY_RHO_EST_POWER
1.0
0                           ! Number of overlap layers for AS preconditioner
HALO                        ! AS restriction operator: NONE HALO
NONE                        ! AS prolongation operator: NONE SUM AVG
L1-JACOBI                  ! Subdomain solver for BJAC/AS: JACOBI GS BGS ILU ILUT MILU MUMPS SLU UMF
1                           ! Inner solver sweeps (GS and JACOBI)
LLK                         ! AINV variant
0                           ! Fill level P for ILU(P) and ILU(T,P)
8                           ! Inverse Fill level P for INVK
1.d-4                       ! Threshold T for ILU(T,P)
%%%%%%%%%%%  Coarse level solver  %%%%%%%%%%%%%%%%
L1-JACOBI                   ! Coarsest-level solver: MUMPS UMF SLU SLUDIST JACOBI GS BJAC
ILU                         ! Coarsest-level subsolver for BJAC: ILU ILUT MILU UMF MUMPS SLU
1                           ! Coarsest-level fillin P for ILU(P) and ILU(T,P)
1.d-4                       ! Coarsest-level threshold T for ILU(T,P)
30                          ! Number of sweeps for JACOBI/GS/BJAC coarsest-level solver
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%  Next preconditioner name and smoothers  %%%%%%%%%%%%%%%%
ML-VBM-VCYCLE-POLY-D-BJAC       ! Longer descriptive name for preconditioner (up to 20 chars)
%%%%%%%%%%%  First smoother (for all levels but coarsest) %%%%%%%%%%%%%%%%
POLY                        ! Smoother type JACOBI FBGS GS BWGS BJAC AS POLY  r 1-level, repeats previous.
6                           ! Number of sweeps for smoother
1                           ! degree for polynomial smoother
POLY_NEW                    ! Polynomial variant
%  Fields to be added for POLY
%    POLY_RHO_ESTIMATE             Currently only POLY_RHO_EST_POWER
POLY_RHO_EST_POWER
%    POLY_RHO_ESTIMATE_ITERATIONS  default = 20
%    POLY_RHO_BA                   set to value
1.0
%
0                           ! Number of overlap layers for AS preconditioner
HALO                        ! AS restriction operator: NONE HALO
NONE                        ! AS prolongation operator: NONE SUM AVG
L1-JACOBI                     ! Subdomain solver for BJAC/AS: JACOBI GS BGS ILU ILUT MILU MUMPS SLU UMF
1                           ! Inner solver sweeps (GS and JACOBI)
LLK                         ! AINV variant
0                           ! Fill level P for ILU(P) and ILU(T,P)
1                           ! Inverse Fill level P for INVK
1.d-4                       ! Threshold T for ILU(T,P)
%%%%%%%%%%%  Second smoother, always ignored for non-ML  %%%%%%%%%%%%%%%%
NONE                        ! Second (post) smoother, ignored if NONE
6                           ! Number of sweeps for (post) smoother
1                           ! degree for polynomial smoother
POLY_LOTTES_BETA                 ! Polynomial variant
POLY_RHO_EST_POWER
1.0
0                           ! Number of overlap layers for AS preconditioner
HALO                        ! AS restriction operator: NONE HALO
NONE                        ! AS prolongation operator: NONE SUM AVG
L1-JACOBI                  ! Subdomain solver for BJAC/AS: JACOBI GS BGS ILU ILUT MILU MUMPS SLU UMF
1                           ! Inner solver sweeps (GS and JACOBI)
LLK                         ! AINV variant
0                           ! Fill level P for ILU(P) and ILU(T,P)
8                           ! Inverse Fill level P for INVK
1.d-4                       ! Threshold T for ILU(T,P)
%%%%%%%%%%%  Coarse level solver  %%%%%%%%%%%%%%%%
L1-JACOBI                   ! Coarsest-level solver: MUMPS UMF SLU SLUDIST JACOBI GS BJAC
ILU                         ! Coarsest-level subsolver for BJAC: ILU ILUT MILU UMF MUMPS SLU
1                           ! Coarsest-level fillin P for ILU(P) and ILU(T,P)
1.d-4                       ! Coarsest-level threshold T for ILU(T,P)
30                          ! Number of sweeps for JACOBI/GS/BJAC coarsest-level solver
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%  Next preconditioner name and smoothers  %%%%%%%%%%%%%%%%
ML-VBM-VCYCLE-AINV-D-BJAC       ! Longer descriptive name for preconditioner (up to 20 chars)
%%%%%%%%%%%  First smoother (for all levels but coarsest) %%%%%%%%%%%%%%%%
BJAC                        ! Smoother type JACOBI FBGS GS BWGS BJAC AS POLY  r 1-level, repeats previous.
6                           ! Number of sweeps for smoother
1                           ! degree for polynomial smoother
POLY_NEW                    ! Polynomial variant
%  Fields to be added for POLY
%    POLY_RHO_ESTIMATE             Currently only POLY_RHO_EST_POWER
POLY_RHO_EST_POWER
%    POLY_RHO_ESTIMATE_ITERATIONS  default = 20
%    POLY_RHO_BA                   set to value
1.0
%
0                           ! Number of overlap layers for AS preconditioner
HALO                        ! AS restriction operator: NONE HALO
NONE                        ! AS prolongation operator: NONE SUM AVG
ILU                           ! Subdomain solver for BJAC/AS: JACOBI GS BGS ILU ILUT MILU MUMPS SLU UMF
1                           ! Inner solver sweeps (GS and JACOBI)
LLK                         ! AINV variant
0                           ! Fill level P for ILU(P) and ILU(T,P)
1                           ! Inverse Fill level P for INVK
1.d-4                       ! Threshold T for ILU(T,P)
%%%%%%%%%%%  Second smoother, always ignored for non-ML  %%%%%%%%%%%%%%%%
NONE                        ! Second (post) smoother, ignored if NONE
6                           ! Number of sweeps for (post) smoother
1                           ! degree for polynomial smoother
POLY_LOTTES_BETA                 ! Polynomial variant
POLY_RHO_EST_POWER
1.0
0                           ! Number of overlap layers for AS preconditioner
HALO                        ! AS restriction operator: NONE HALO
NONE                        ! AS prolongation operator: NONE SUM AVG
L1-JACOBI                  ! Subdomain solver for BJAC/AS: JACOBI GS BGS ILU ILUT MILU MUMPS SLU UMF
1                           ! Inner solver sweeps (GS and JACOBI)
LLK                         ! AINV variant
0                           ! Fill level P for ILU(P) and ILU(T,P)
8                           ! Inverse Fill level P for INVK
1.d-4                       ! Threshold T for ILU(T,P)
%%%%%%%%%%%  Coarse level solver  %%%%%%%%%%%%%%%%
L1-JACOBI                   ! Coarsest-level solver: MUMPS UMF SLU SLUDIST JACOBI GS BJAC
ILU                         ! Coarsest-level subsolver for BJAC: ILU ILUT MILU UMF MUMPS SLU
1                           ! Coarsest-level fillin P for ILU(P) and ILU(T,P)
1.d-4                       ! Coarsest-level threshold T for ILU(T,P)
30                          ! Number of sweeps for JACOBI/GS/BJAC coarsest-level solver
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%  Next preconditioner name and smoothers  %%%%%%%%%%%%%%%%
END-OF-TESTS       ! Longer descriptive name for preconditioner (up to 20 chars)
